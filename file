trigger:
  branches:
    include:
      - main
  paths:
    include:
      - production/charts/dataplatform/**

parameters:
  - name: ChartVersion
    type: string
    default: '1.0.0'
    displayName: 'Helm Chart Version'

variables:
  ChartName: 'dataplatform'
  ChartPath: 'production/charts/dataplatform'
  AWSRegion: 'us-east-2'
  DevAWSCredentials: 'azdo-cfn-medge-dev'
  ECRRegistry: '767397961280.dkr.ecr.us-east-2.amazonaws.com'
  ECRRepo: 'catos-data-platform-repo'
  HelmPushTag: 'latest'

stages:
  - stage: package_and_push_helm_chart
    displayName: 'Package and Push Helm Chart'
    jobs:
      - job: package_helm
        displayName: 'Package and Push Helm Chart'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          # Install Helm CLI
          - task: Bash@3
            displayName: 'Install Helm CLI'
            inputs:
              targetType: 'inline'
              script: |
                set -e
                echo "Installing Helm CLI..."
                curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
                helm version

          # Install AWS CLI
          - task: Bash@3
            displayName: 'Install AWS CLI'
            inputs:
              targetType: 'inline'
              script: |
                set -e
                echo "Installing AWS CLI..."
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install --update
                aws --version

          # Package Helm Chart
          - task: Bash@3
            displayName: 'Package Helm Chart'
            inputs:
              targetType: 'inline'
              script: |
                set -e
                echo "Packaging Helm chart from $(System.DefaultWorkingDirectory)/$(ChartPath) with version ${{ parameters.ChartVersion }}"
                # Override chart name so it matches exactly ECR repo name
                helm package "$(System.DefaultWorkingDirectory)/$(ChartPath)" \
                  --version "${{ parameters.ChartVersion }}" \
                  --app-version "${{ parameters.ChartVersion }}" \
                  --name-template "$(ECRRepo)"
                echo "Packaged file name: $(ECRRepo)-${{ parameters.ChartVersion }}.tgz"
                ls -lh "$(ECRRepo)-${{ parameters.ChartVersion }}.tgz"

          # Login to ECR and Push Helm Chart
          - task: AmazonWebServices.aws-vsts-tools.AWSShellScript.AWSShellScript@1
            displayName: 'Login to ECR and Push Helm Chart'
            env:
              ECRRegistry: $(ECRRegistry)
              ECRRepo: $(ECRRepo)
              ChartVersion: ${{ parameters.ChartVersion }}
            inputs:
              awsCredentials: '$(DevAWSCredentials)'
              regionName: '$(AWSRegion)'
              scriptType: 'inline'
              inlineScript: |
                set -e
                export HELM_EXPERIMENTAL_OCI=1
                echo "Logging in to AWS ECR for Helm OCI Push..."
                aws ecr get-login-password --region ${AWS_REGION} | helm registry login ${ECRRegistry} --username AWS --password-stdin
                echo "Logged into AWS ECR Helm OCI registry"

                CHART_PACKAGE="${ECRRepo}-${ChartVersion}.tgz"
                
                echo "Pushing Helm chart ${CHART_PACKAGE} to oci://${ECRRegistry}/${ECRRepo}"
                helm push --insecure-skip-tls-verify "${CHART_PACKAGE}" "oci://${ECRRegistry}/${ECRRepo}"
